name: SonarCloud Scan
description: >
  Scan your code with SonarCloud to detect bugs, vulnerabilities and code smells
  in 26+ programming languages.
branding:
  icon: check
  color: green
runs:
  using: composite
  steps:
#    - name: Restore sonarcloud Image Cache if it exists
#      id: cache-docker-sonarcloud
#      uses: actions/cache@v3
#      with:
#        path: ~/ci/cache/docker/sonarcloud
#        key: cache-docker-sonarcloud
#
#    - name: Update sonarcloud Image Cache if cache miss
#      if: steps.cache-docker-sonarcloud.outputs.cache-hit != 'true'
#      shell: bash
#      run: |
#        docker pull 885420015722.dkr.ecr.ap-southeast-1.amazonaws.com/sonar-cloud:scanner-cli-5.0
#        mkdir -p ~/ci/cache/docker/sonarcloud
#        docker image save 885420015722.dkr.ecr.ap-southeast-1.amazonaws.com/sonar-cloud:scanner-cli-5.0 \
#        --output ~/ci/cache/docker/sonarcloud/scanner-cli-5.0.tar
#
#    - name: Use sonarcloud Image Cache if cache hit
#      if: steps.cache-docker-sonarcloud.outputs.cache-hit == 'true'
#      shell: bash
#      run: docker image load --input ~/ci/cache/docker/sonarcloud/scanner-cli-5.0.tar

    - name: Set GitHub Path
      run: echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}

    - name: Build docker image
      shell: bash
      run: |
        docker build \
        --tag sonarcloud:latest \
        --file ${{github.action_path}}/Dockerfile ${{github.action_path}}

    - name: Run sonarcloud scanner
      shell: bash
      run: |
        docker run --rm \
        --env INPUT_PROJECTBASEDIR="${{inputs.projectBaseDir}}" \ 
        --env INPUT_ARGS="${{inputs.args}}" \
        --env SONAR_TOKEN="${{env.SONAR_TOKEN}}" \
        sonarcloud:latest

inputs:
  args:
    description: Additional arguments to the sonarcloud scanner
    required: false
  projectBaseDir:
    description: Set the sonar.projectBaseDir analysis property
    required: false
    default: .
